# some global settings

settings:
  registry:
    username: "qwe"
    password: "123"
    domain: "alfa-registry.com"
  namespace: "fs-namespace" # change param
  env:
    SCHEMA_NAME: "fs-schema"
    TYPE_DB: "type-db"
    DB_HOST: "dh-pg-1p"
    DB_PORT: "5432"
    DB_NAME_dev: "fs_metastore_dev"
    DB_NAME_prod: "fs_metastore_prod"
    DB_USER_dev: "fs_metastore_dev"
    DB_USER_prod: "fs_metastore_prod"
    LOG_FORMAT: >- 
      "%(asctime)s.%(msecs)03d [%(levelname)s] - %(name)s - %(funcName)s - %(lineno)s - %(message)s"
    DATEFMT: "%Y-%m-%d %I:%M:%S"
    LOG_LEVEL: INFO
  secrets:
    DB_PASS: "pass" #base64
    

# external dependency settings
postgres:
  enabled: false
  auth:
    enabled: false

# fs_backend_api_dev
fs_backend_api_dev:
  enabled: true
  image:
    repository: "alfa-registry.com"
    tag: "131975fd"
    pullPolicy: "Always"
  replicaCount: 1
  env:
    DB_SCHEMA: "public"
    TYPE_DB: "dev"
    DB_HOST: "dh-pg-1p"
    DB_PORT: "10000"
    DB_NAME_dev: "fs_metastore_dev"
    DB_USER_dev: "fs_metastore_dev"
    LOG_FORMAT: >- 
      "%(asctime)s.%(msecs)03d [%(levelname)s] - %(name)s - %(funcName)s - %(lineno)s - %(message)s"
    DATEFMT: "%Y-%m-%d %I:%M:%S"
    LOG_LEVEL: INFO
    GENERAL_URI: "http://fs-general-api"
    GIT_MANAGER_URI: "http://fs-git-manager"
    USE_GIT_MANAGER: "true"
    JIRA_URI: "https://jira.moscow.alfaintra.net/browse/"
    GIT_URI: "https://git.moscow.alfaintra.net/projects/AFM/repos/features_dev/browse/"
    MODEL_MANAGER_URI: "http://fs-model-manager"
    BACKEND_PROXY_URI: "http://fs-backend-proxy:8080"
    KAFKA_TOPIC_POSTFIX: ""
    KAFKA_INSTANCE_ADDRESS: "kafka-fs-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
    KAFKA_AUTH_USER: "fs-user"
  secrets:
    DB_PASS: "c2VjdXJlcGFzc3dvcmQ="  # base64
    KAFKA_AUTH_PASSWORD: "a2Fma2FwYXNzd29yZA=="  # base64
  service:
    name: fs-backend-api-dev
    type: ClusterIP
    port: 80
    targetport: 8000
  livenessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  limits:
    cpu: 1
    memory: 4Gi
  requests:
    cpu: 1
    memory: 4Gi

# fs_backend_api_prod
fs_backend_api_prod:
  enabled: true
  image:
    repository: "alfa-registry.com"
    tag: "131975fd"
    pullPolicy: "Always"
  replicaCount: 1
  env:
    DB_SCHEMA: "public"
    TYPE_DB: "prod"
    DB_HOST: "dh-pg-1p"
    DB_PORT: "10000"
    DB_NAME_dev: "fs_metastore_prod"
    DB_USER_dev: "fs_metastore_prod"
    LOG_FORMAT: >- 
      "%(asctime)s.%(msecs)03d [%(levelname)s] - %(name)s - %(funcName)s - %(lineno)s - %(message)s"
    DATEFMT: "%Y-%m-%d %I:%M:%S"
    LOG_LEVEL: INFO
    GENERAL_URI: "http://example.com"
    LOG_FORMAT: "json"
    DATEFMT: "YYYY-MM-DD"
    LOG_LEVEL: "info"
    GIT_MANAGER_URI: "http://gitmanager.example.com"
    USE_GIT_MANAGER: "true"
    JIRA_URI: "http://jira.example.com"
    GIT_URI: "http://git.example.com"
    MODEL_MANAGER_URI: "http://modelmanager.example.com"
    BACKEND_PROXY_URI: "http://backendproxy.example.com"
    KAFKA_TOPIC_POSTFIX: "topic-postfix"
    KAFKA_INSTANCE_ADDRESS: "kafka.example.com"
    KAFKA_AUTH_USER: "kafkauser"
  secrets:
    DB_PASS: "c2VjdXJlcGFzc3dvcmQ="  # base64
    KAFKA_AUTH_PASSWORD: "a2Fma2FwYXNzd29yZA=="  # base64
  service:
    name: fs-backend-api-prod
    type: ClusterIP
    port: 80
    targetport: 8000
  livenessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  limits:
    cpu: 1
    memory: 4Gi
  requests:
    cpu: 1
    memory: 4Gi


# fs_backend_proxy
fs_backend_proxy:
  enabled: true
  image:
    repository: "alfa-registry.com"
    tag: "131975fd"
    pullPolicy:
  replicaCount: 2
  env:
    KEYCLOAK_AUTH_URL: "https://idp.alfaintra.net/auth/realms/users/protocol/openid-connect/auth"
    KEYCLOAK_TOKEN_URL: "https://idp.alfaintra.net/auth/realms/users/protocol/openid-connect/token"
    KEYCLOAK_USER_INFO_URL: "https://idp.alfaintra.net/auth/realms/users/protocol/openid-connect/userinfo"
    KEYCLOAK_LOGOUT_URL: "https://idp.alfaintra.net/auth/realms/users/protocol/openid-connect/logout"
    KEYCLOAK_REDIRECT_URI: "https://featurestore.dh.moscow.alfaintra.net/auth/keycloak_redirect"
    AUTH_TYPE: "KEYCLOAK"
    AUTH_USE_GROUPS: "True"
    DB_SCHEMA: "users"
    DB_HOST: "dh-pg-1p"
    DB_PORT: "10000"
    DB_NAME_prod: "fs_metastore_prod"
    DB_USER_prod: "fs_metastore_prod"
    LOG_FORMAT: >- 
      "%(asctime)s.%(msecs)03d [%(levelname)s] - %(name)s - %(funcName)s - %(lineno)s - %(message)s"
    DATEFMT: "%Y-%m-%d %I:%M:%S"
    LOG_LEVEL: INFO
  secrets:
    DB_PASS_prod: "cGFzcw==" #base64
    KEYCLOAK_CLIENT_SECRET: "Y2xpZW50X2lk" #base64
    KEYCLOAK_CLIENT_ID: "Y2xpZW50X2lk" #base64
  args:
  - '--host=0.0.0.0'
  - '--port=8080'
  - '/dev:http://fs-backend-api-test-dev:80'
  - '/prod:http://fs-backend-api-test-prod:80'
  - '/general:http://fs-general-api:80'
  - '/metric:http://fs-metric-manager:80'
  - '/model_manager:http://fs-model-manager:80'
  - '/file_manager:http://fs-file-manager:8000'
  service:
    name: fs-backend-proxy
    type: ClusterIP
    port: 8080
  livenessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  limits:
    cpu: 0.5
    memory: 1Gi
  requests:
    cpu: 0.5
    memory: 1Gi


# fs_datamart_backend
fs_datamart_backend:
  enabled: true
  image:
    repository: "alfa-registry.com"
    tag: "131975fd"
    pullPolicy:
  replicaCount: 1
  env:
    DB_SCHEMA: "public"
    DB_HOST: "dh-pg-1p"
    DB_PORT: "10000"
    DB_NAME_prod: "fs_metastore_prod"
    DB_USER_prod: "fs_metastore_prod"
    LOG_FORMAT: >- 
      "%(asctime)s.%(msecs)03d [%(levelname)s] - %(name)s - %(funcName)s - %(lineno)s - %(message)s"
    DATEFMT: "%Y-%m-%d %I:%M:%S"
    LOG_LEVEL: INFO
    CACHE_UPDATE: "180"
  secrets:
  virtualService:
    web:
      enabled: true
      gateway: "mdp-gateway"
      istio-namespace: "istio-ingress"
      host: "datamartbackend.mdp.moscow.alfaintra.net"
      path: "/"
      port: "8000"
  service:
    name: fs-datamart-backend
    type: ClusterIP
    port: 8000
  livenessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  limits:
    cpu: 1
    memory: 4Gi
  requests:
    cpu: 1
    memory: 4Gi

# fs_file_manager
fs_file_manager:
  enabled: true
  image:
    repository: "alfa-registry.com"
    tag: "131975fd"
    pullPolicy:
  replicaCount: 1
  env:
    DB_SCHEMA: "file_manager"
    DB_HOST: "dh-pg-1p"
    DB_PORT: "10000"
    DB_NAME_prod: "fs_metastore_prod"
    DB_USER_prod: "fs_metastore_prod"
    LOG_FORMAT: >- 
      "%(asctime)s.%(msecs)03d [%(levelname)s] - %(name)s - %(funcName)s - %(lineno)s - %(message)s"
    DATEFMT: "%Y-%m-%d %I:%M:%S"
    LOG_LEVEL: INFO
    CACHE_UPDATE: "180"
    MINIO_S3_ENDPOINT_URL: "http://minio.minio-dh.svc.cluster.local"
    MINIO_S3_BUCKET: "mmc-prod"
  secrets:
    DB_PASS: "pass" #base64
    MINIO_ACCESS_KEY_ID: mmc-prod #base64
    MINIO_SECRET_ACCESS_KEY: LbPfrmR274 #base64
    MINIO_S3_USE_SSL: "False"
  service:
    name: fs-file-manager
    type: ClusterIP
    port: 8000
  livenessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  limits:
    cpu: 1
    memory: 2Gi
  requests:
    cpu: 1
    memory: 2Gi


# fs_general_api
fs_general_api:
  enabled: true
  image:
    repository: "alfa-registry.com"
    tag: "131975fd"
    pullPolicy: "Always"
  replicaCount: 1
  env:
    BACKEND_URI_DEV: "http://fs-backend-api-dev:80"
    BACKEND_URI_PROD: "http://fs-backend-api-prod:80"
    METRIC_MANAGER_URI: "http://fs-metric-manager"
    USE_METRIC_MANAGER: "True"
    GIT_MANAGER_URI: "ttp://fs-git-manager"
    USE_GIT_MANAGER: "True"
    USE_GIT_MANAGER_FOR_DELETION: "True"
    GIT_USERNAME: "tech_dpa_fs_atlassia"
    GIT_REPO_DEV: "git.moscow.alfaintra.net/scm/afm/features_dev.git"
    GIT_REPO_PROD: "git.moscow.alfaintra.net/scm/afm/feature_store_dags_prod.git"
    GIT_URI_DEV: "https://git.moscow.alfaintra.net/projects/AFM/repos/features_dev/browse/"
    GIT_URI_PROD: "https://git.moscow.alfaintra.net/projects/AFM/repos/feature_store_dags_prod/browse/"
    JIRA_URI: "https://jira.moscow.alfaintra.net/browse/"
    AIRFLOW_SSH_HOST_PROD: "10.230.89.3"
    AIRFLOW_SSH_PORT_PROD: "22"
    AIRFLOW_SSH_USERNAME_PROD: "airflow"
    KAFKA_TOPIC_POSTFIX: ""
    KAFKA_INSTANCE_ADDRESS: "kafka-fs-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
    KAFKA_AUTH_USER: "fs-user"
    KAFKA_AUTH_PASSWORD: "MBDmwL6K3Uae7wCJG5rftdiC9e5M2vqo"
    MODEL_MANAGER_URI: "http://fs-model-manager"
    PR_TARGET_PROJECT_REVIEWERS: "u_m1fz0, u_m1r2t"
    PR_AGGREGATE_PROJECT_REVIEWERS: "u_m0ujz, u_m1dme, u_m18wr, u_m09v2, u_m1e6d, u_m1azt, u_m12wd, u_m1ahn, u_m1tlq, u_m1c2d"
    PR_FEATURE_PROJECT_REVIEWERS: "u_m0ujz, u_m1dme, u_m18wr, u_m09v2, u_m1e6d, u_m1azt, u_m12wd, u_m1ahn, u_m1tlq, u_m1c2d"
  secrets:
    GIT_PASSWORD: "pass"
    AIRFLOW_SSH_PASSWORD_PROD: "pass"
  service:
    name: fs-general-api
    type: ClusterIP
    port: 80
    targetport: 8000
  livenessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 300
    periodSeconds: 300
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  limits:
    cpu: 1
    memory: 4Gi
  requests:
    cpu: 1
    memory: 4Gi

# fs_git_manager
fs_git_manager:
  enabled: true
  image:
    repository: "alfa-registry.com"
    tag: "131975fd"
    pullPolicy: "Always"
  replicaCount: 1
  env:
    GIT_USERNAME: "tech_dpa_fs_atlassia"
    GIT_REPO_URL: "git.moscow.alfaintra.net/scm/afm/features_dev.git"
    GIT_CONN_PROTOCOL: "http"
    GENERAL_URI: "http://fs-general-api"
    GIT_URI_DEV: "https://git.moscow.alfaintra.net/projects/AFM/repos/features_dev/browse/"
    GIT_URI_PROD: "https://git.moscow.alfaintra.net/projects/AFM/repos/feature_store_dags_prod/browse/"
    GIT_REPO_DEV: "git.moscow.alfaintra.net/scm/afm/features_dev.git"
    GIT_REPO_PROD: "git.moscow.alfaintra.net/scm/afm/feature_store_dags_prod.git"
    PRIMARY_BRANCH_DEV: "develop"
    PRIMARY_BRANCH_PROD: "master"
    AIRFLOW_BRANCH: "airflow_feature_store_mdp_dev"
    GIT_PROD_API_ENDPOINT: "https://git.moscow.alfaintra.net/rest/api/1.0/projects/{owner}/repos/{repo_slug}"
    GIT_PROD_OWNER: "AFM"
    GIT_PROD_REPO_SLUG: "feature_store_dags_prod"
    KAFKA_TOPIC_POSTFIX: ""
    KAFKA_INSTANCE_ADDRESS: "kafka-fs-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
    KAFKA_AUTH_USER: "fs-user"
    HANDLE_MODEL_ON_CREATE_EVENT_GM: "True"
    HANDLE_LEGACY_MODEL_ON_UPGRADE_EVENT_GM: "True"
    HANDLE_JIRA_TASK_ON_CREATE_EVENT_GM: "True"
  secrets:
    GIT_PASSWORD: "pass" #base64
    MINIO_ACCESS_KEY_ID:
    MINIO_SECRET_ACCESS_KEY:
    MINIO_S3_USE_SSL:
    KAFKA_AUTH_PASSWORD:
  service:
    name: fs-git-manager
    ype: ClusterIP
    port: 80
    targetport: 8000
  livenessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  limits:
    cpu: 0.5
    memory: 1Gi
  requests:
    cpu: 0.5
    memory: 1Gi

# fs_jira_manager
fs_jira_manager:
  enabled: true
  image:
    repository: "alfa-registry.com"
    tag: "131975fd"
    pullPolicy: "Always"
  replicaCount: 1
  env:
    JIRA_MMS_LOGIN: "fs_atlassian"
    KAFKA_TOPIC_POSTFIX: ""
    KAFKA_INSTANCE_ADDRESS: "kafka-fs-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
    KAFKA_AUTH_USER: "fs-user"
    MLOPS_TEAMLEAD: "U_M1QCS"
    HANDLE_MODEL_ON_CREATE_EVENT_JM: "True"
    HANDLE_MODEL_ON_CHANGE_STATUS_EVENT_JM: "True"
    HANDLE_MODEL_ON_CHANGE_DESCRIPTION_EVENT_JM: "True"
    HANDLE_MODEL_ON_CHANGE_ASSIGNEE_EVENT_JM: "True"
    HANDLE_LEGACY_MODEL_ON_UPGRADE_EVENT_JM: "True"
  secrets:
    JIRA_MMS_PASSWORD: "pass"
    KAFKA_AUTH_PASSWORD: "pass"
  service:
    name: fs-jira-manager
    type: ClusterIP
    port: 80
    targetport: 8000
  livenessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  limits:
    cpu: 0.5
    memory: 1Gi
  requests:
    cpu: 0.5
    memory: 1Gi

# fs_mail_manager
fs_mail_manager:
  enabled: true
  image:
    repository: "alfa-registry.com"
    tag: "131975fd"
    pullPolicy: "Always"
  replicaCount: 1
  env:
    FEATURESTORE_URI: "https://featurestore.dh.moscow.alfaintra.net"
    MAILING_BOX: "fs_etl@alfabank.ru"
    MAILING_BOX_LOGIN: "fs_etl"
    SMTP: "gw.alfaintra.net"
#    LOG_FORMAT: 
#    DATEFMT:
#    LOG_LEVEL:
  secrets:
    
  service:
    name: fs-mail-manager
    type: ClusterIP
    port: 80
    targetport: 8000
  livenessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  limits:
    cpu: 0.1
    memory: 1Gi
  requests:
    cpu: 0.1
    memory: 1Gi

# fs_metric_manager
fs_metric_manager:
  enabled: true
  image:
    repository: "alfa-registry.com"
    tag: "131975fd"
    pullPolicy: "Always"
  replicaCount: 1
  env:
    CALCULATE_ALL_REPORTS: "True"
    CALCULATE_ALL_REPORTS_INTERVAL_IN_MINUTES: "5"
    BACKEND_URI_PROD: "http://fs-backend-api-prod:80"
    LOGGING_SQL: "False"
  secrets:
    
  service:
    name: fs-metric-manager
    type: ClusterIP
    port: 80
    targetport: 8000
  livenessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  limits:
    cpu: 0.5
    memory: 1Gi
  requests:
    cpu: 0.5
    memory: 1Gi

# fs_model_manager
fs_model_manager:
  enabled: true
  image:
    repository: "alfa-registry.com"
    tag: "131975fd"
    pullPolicy: "Always"
  replicaCount: 1
  env:
    LOGGING_SQL: "False"
    GIT_MANAGER_URI: "http://fs-git-manager"
    BACKEND_PROXY_URI: "http://fs-backend-proxy:8080"
    USE_GIT_MANAGER: "True"
    USE_MAIL_MANAGER: "True"
    JIRA_MANAGER_URI: "http://fs-jira-manager"
    GENERAL_URI: "http://fs-general-api"
    MLOPS_TEAMLEAD: "U_M1QCS"
    UPDATE_BUILD_PIPELINES: "True"
    JENKINS_LOGIN: "tech_mms"
    JENKINS_TRAIN_LOGS_URL: "https://jenkins.infra.moscow.alfaintra.net/job/mdp-prod_mlops-pipelines/job/ModelTrain"
    JENKINS_INFERENCE_LOGS_URL: "https://jenkins.infra.moscow.alfaintra.net/job/mdp-prod_mlops-pipelines/job/ModelInference"
    JENKINS_TRAIN_AUTO_LOGS_URL: "https://jenkins.infra.moscow.alfaintra.net/job/mdp-prod_automl-pipelines/job/ModelAutoTrain"
    JENKINS_INFERENCE_AUTO_LOGS_URL: "https://jenkins.infra.moscow.alfaintra.net/job/mdp-prod_automl-pipelines/job/ModelAutoInference"
    JENKINS_MODEL_TRAIN_PIPE_URL: "https://jenkins.infra.moscow.alfaintra.net/job/mdp-prod_mlops-pipelines/job/ModelTrain/buildWithParameters?delay=0sec"
    JENKINS_MODEL_INFERENCE_PIPE_URL: "https://jenkins.infra.moscow.alfaintra.net/job/mdp-prod_mlops-pipelines/job/ModelInference/buildWithParameters?delay=0sec"
    JENKINS_WEBHOOK_URL: "https://featurestore.dh.moscow.alfaintra.net/v2/model/run/webhookUrl"
    JENKINS_MODEL_AUTO_TRAIN_PIPE_URL: "https://jenkins.infra.moscow.alfaintra.net/job/mdp-prod_automl-pipelines/job/ModelAutoTrain/buildWithParameters?delay=0sec"
    JENKINS_MODEL_AUTO_INFERENCE_PIPE_URL: "https://jenkins.infra.moscow.alfaintra.net/job/mdp-prod_automl-pipelines/job/ModelAutoInference/buildWithParameters?delay=0sec"
    MAIL_MANAGER_URI: "http://fs-mail-manager"
    DOMAIN_MMS_ADDRESS: "featurestore.dh.moscow.alfaintra.net"
    KAFKA_TOPIC_POSTFIX: ""
    KAFKA_INSTANCE_ADDRESS: "kafka-fs-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
    KAFKA_AUTH_USER: "fs-user"
    HANDLE_GIT_ON_CREATE_EVENT_MM: "True"
    HANDLE_JIRA_ON_CREATE_EVENT_MM: "True"
  secrets:
    JENKINS_PASSWORD: "pass"
    KAFKA_AUTH_PASSWORD:
  service:
    name: fs-model-manager
    type: ClusterIP
    port: 80
    targetport: 8000
  livenessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  limits:
    cpu: 1
    memory: 1Gi
  requests:
    cpu: 1
    memory: 1Gi

# fs_registry_ui
fs_registry_ui:
  enabled: true
  image:
    repository: "alfa-registry.com"
    tag: "131975fd"
    pullPolicy: "Always"
  replicaCount: 1
  env:
    HOST: "stand_host"
    NODE_ENV: "production"
    AUTH_TYPE: "KEYCLOAK"
    KEYCLOAK_URL: "https://idp.alfaintra.net"
    KEYCLOAK_REALM: "users"
    KEYCLOAK_REDIRECT_URL: "https://featurestore.dh.moscow.alfaintra.net/auth/keycloak_redirect"
  secrets:
    KEYCLOAK_CLIENT_ID: "pass"
  service:
    name: fs-registry-ui
    type: ClusterIP
    port: 8080
    targetport: 80
  livenessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  limits:
    cpu: 1
    memory: 1Gi
  requests:
    cpu: 1
    memory: 1Gi