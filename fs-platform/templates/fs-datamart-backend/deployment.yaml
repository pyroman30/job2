{{ if or (not (hasKey $.Values.fs_datamart_backend "enabled")) (eq (coalesce $.Values.fs_datamart_backend.enabled false) true) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fs-datamart-backend
  namespace: {{ $.Values.settings.namespace }}
  labels:
    app: fs-datamart-backend
spec:
  replicas: {{ .Values.fs_datamart_backend.replicaCount }}
  selector:
    matchLabels:
      app: fs-datamart-backend
  template:
    metadata:
      annotations:
      {{- if $.Values.fs_datamart_backend.env }}
        checksum/configmap: {{ include (print $.Template.BasePath "/fs-datamart-backend/configmap.yaml") . | sha256sum | quote }}
      {{- end }}
      
      labels:
        app: fs-datamart-backend
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ $.Values.fs_datamart_backend.image.repository }}:{{ $.Values.fs_datamart_backend.image.tag }}
        imagePullPolicy: {{ .Values.fs_datamart_backend.image.pullPolicy }}
        ports:
        - containerPort: 80
        envFrom:
        {{- if $.Values.fs_datamart_backend.env }}
        - configMapRef:
            name: fs-datamart-backend-config
        {{- end }}
        
        - secretRef:
            name: fs-datamart-backend-secret
        
        resources:
          requests:
            {{- toYaml $.Values.fs_datamart_backend.requests | nindent 12 }}
          limits:
            {{- toYaml $.Values.fs_datamart_backend.limits | nindent 12 }}
        {{- if $.Values.fs_datamart_backend.livenessProbe }}
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 8000
            {{- toYaml $.Values.fs_datamart_backend.livenessProbe | nindent 10 }}
        {{- end }}
        {{- if $.Values.fs_datamart_backend.readinessProbe }}
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: 8000
            {{- toYaml $.Values.fs_datamart_backend.readinessProbe | nindent 10 }}
        {{- end }}
{{- end }}

